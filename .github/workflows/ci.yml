# file: .github/workflows/ci.yml
name: iOS CI & Jira Automation

on:
  push:
    branches: [ develop ]
  pull_request:
    types: [opened, closed]
    branches: [ develop ]

jobs:
  # --------------------------
  # Build job
  # --------------------------
  build:
    name: Build (macOS / Xcode)
    runs-on: macos-14

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Select Xcode 15
        run: sudo xcode-select -s "/Applications/Xcode_15.2.app"

      - name: Show Xcode version
        run: xcodebuild -version

      - name: Build for simulator (iPhone 15, iOS 17.5)
        run: |
          # Build using the project file (no CocoaPods workspace)
          xcodebuild \
            -scheme Marko \
            -project Marko.xcodeproj \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
            clean build

  # --------------------------
  # Jira automation job
  # --------------------------
  jira-transition:
    name: Jira automation (extract key, transition)
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: Show PR metadata (debug)
        run: |
          echo "github.head_ref='${{ github.head_ref }}'"
          echo "github.ref='${{ github.ref }}'"
          echo "github.event.action='${{ github.event.action }}'"

      - id: get-jira-key
        name: Get Jira Key from Branch Name
        # Use env to safely inject GitHub context values into the shell
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          # prefer github.head_ref (branch name on PR); fallback to github.ref
          BRANCH_NAME="${GITHUB_HEAD_REF}"
          if [ -z "$BRANCH_NAME" ]; then
            BRANCH_NAME="${GITHUB_REF}"
          fi

          # extract pattern like MRK-123 (uppercase letters, dash, digits)
          JIRA_KEY=$(echo "$BRANCH_NAME" | grep -o -E '[A-Z]+-[0-9]+' || true)

          echo "branch_name=$BRANCH_NAME"
          echo "JIRA_KEY=$JIRA_KEY"

          # export output for other steps
          echo "JIRA_KEY=$JIRA_KEY" >> $GITHUB_OUTPUT

      - name: Debug: show detected Jira key
        env:
          JIRA_KEY: ${{ steps.get-jira-key.outputs.JIRA_KEY }}
        run: |
          echo "Detected JIRA_KEY='$JIRA_KEY'"

      - name: Transition Jira Issue to 'In Progress'
        if: ${{ steps.get-jira-key.outputs.JIRA_KEY != '' && github.event.action == 'opened' }}
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ steps.get-jira-key.outputs.JIRA_KEY }}
          transition: "In Progress"
          login: ${{ secrets.JIRA_USER_EMAIL }}
          password: ${{ secrets.JIRA_API_TOKEN }}
          site: ${{ secrets.JIRA_BASE_URL }}

      - name: Transition Jira Issue to 'Done'
        if: ${{ steps.get-jira-key.outputs.JIRA_KEY != '' && github.event.action == 'closed' && github.event.pull_request.merged == true }}
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ steps.get-jira-key.outputs.JIRA_KEY }}
          transition: "Done"
          login: ${{ secrets.JIRA_USER_EMAIL }}
          password: ${{ secrets.JIRA_API_TOKEN }}
          site: ${{ secrets.JIRA_BASE_URL }}


#name: iOS CI
#
#on:
#  push:
#    branches: [ develop, main ]
#  pull_request:
#    branches: [ develop, main ]
#
#jobs:
#  build:
#    runs-on: macos-14
#
#    steps:
#      - name: Checkout source
#        uses: actions/checkout@v4
#
#      - name: Select Xcode 15
#        run: sudo xcode-select -s "/Applications/Xcode_15.2.app"
#
#      - name: Show Xcode version
#        run: xcodebuild -version
#
#      - name: Build for simulator (iPhone 15, iOS 17.5)
#        run: |
#          xcodebuild \
#            -scheme Marko \
#            -sdk iphonesimulator \
#            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
#            clean build | xcpretty
