name: iOS CI & Jira Automation
on:
  push:
    branches: [ develop ]
  pull_request:
    types: [opened, closed]
    branches: [ develop ]

jobs:
  build:
    name: Build Project
    runs-on: macos-14
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Select Xcode 15
        run: sudo xcode-select -s "/Applications/Xcode_15.2.app"
      - name: Build for simulator
        run: |
          xcodebuild \
            -scheme Marko \
            -project Marko.xcodeproj \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
            clean build

  jira-transition:
    name: Update Jira Ticket
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        
      - name: Get Jira Key from Branch Name
        id: get-jira-key
        run: |
          # Get the branch name from the pull request event
          BRANCH_NAME="${{ github.head_ref }}"
          echo "Raw branch name: '$BRANCH_NAME'"
          echo "Branch name length: ${#BRANCH_NAME}"
          
          # Debug: show what we're searching in
          echo "Searching for Jira key pattern [A-Z]+-[0-9]+ in: $BRANCH_NAME"
          
          # Use grep to find a pattern like MRK-123, with more specific matching
          JIRA_KEY=$(echo "$BRANCH_NAME" | grep -o -E '[A-Z]{2,}-[0-9]+' || echo "")
          
          if [ -z "$JIRA_KEY" ]; then
            echo "No Jira key found in branch name"
            # Try alternative extraction methods
            echo "Trying alternative patterns..."
            JIRA_KEY=$(echo "$BRANCH_NAME" | sed -n 's/.*(\([A-Z]\{2,\}-[0-9]\+\)).*/\1/p')
            echo "Alternative extraction result: '$JIRA_KEY'"
          fi
          
          echo "Final extracted Jira Key: '$JIRA_KEY'"
          echo "JIRA_KEY=${JIRA_KEY}" >> $GITHUB_OUTPUT

      - name: Transition Jira Issue to 'In Progress'
        if: github.event.action == 'opened' && steps.get-jira-key.outputs.JIRA_KEY != ''
        uses: atlassian/gajira-transition@v3
        env:
          # Explicitly unset any config path to force using input parameters
          JIRA_CONFIG_PATH: ""
        with:
          issue: ${{ steps.get-jira-key.outputs.JIRA_KEY }}
          transition: "In Progress"
          login: ${{ secrets.JIRA_USER_EMAIL }}
          password: ${{ secrets.JIRA_API_TOKEN }}
          site: ${{ secrets.JIRA_BASE_URL }}
          
      - name: Transition Jira Issue to 'Done'
        if: github.event.action == 'closed' && github.event.pull_request.merged == true && steps.get-jira-key.outputs.JIRA_KEY != ''
        uses: atlassian/gajira-transition@v3
        env:
          # Explicitly unset any config path to force using input parameters
          JIRA_CONFIG_PATH: ""
        with:
          issue: ${{ steps.get-jira-key.outputs.JIRA_KEY }}
          transition: "Done"
          login: ${{ secrets.JIRA_USER_EMAIL }}
          password: ${{ secrets.JIRA_API_TOKEN }}
          site: ${{ secrets.JIRA_BASE_URL }}
          
#name: iOS CI & Jira Automation
#
#on:
#  push:
#    branches: [ develop ]
#  pull_request:
#    types: [opened, closed]
#    branches: [ develop ]
#
#jobs:
#  build:
#    name: Build Project
#    runs-on: macos-14
#    steps:
#      - name: Checkout source
#        uses: actions/checkout@v4
#
#      - name: Select Xcode 15
#        run: sudo xcode-select -s "/Applications/Xcode_15.2.app"
#
#      - name: Build for simulator
#        run: |
#          xcodebuild \
#            -scheme Marko \
#            -project Marko.xcodeproj \
#            -sdk iphonesimulator \
#            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.5' \
#            clean build
#
#  jira-transition:
#    name: Update Jira Ticket
#    # This job only runs on pull request events, not pushes
#    if: github.event_name == 'pull_request'
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Get Jira Key from Branch Name
#        id: get-jira-key
#        run: |
#          # Get the branch name from the pull request event
#          BRANCH_NAME="${{ github.head_ref }}"
#          # Use grep to find a pattern like MRK-123
#          JIRA_KEY=$(echo "$BRANCH_NAME" | grep -o -E '[A-Z]+-[0-9]+')
#          echo "JIRA_KEY=${JIRA_KEY}" >> $GITHUB_OUTPUT
#
#      - name: Transition Jira Issue to 'In Progress'
#        # This step only runs if a PR was opened AND a Jira key was found
#        if: github.event.action == 'opened' && steps.get-jira-key.outputs.JIRA_KEY != ''
#        uses: atlassian/gajira-transition@v3
#        with:
#          issue: ${{ steps.get-jira-key.outputs.JIRA_KEY }}
#          transition: "In Progress"
#          login: ${{ secrets.JIRA_USER_EMAIL }}
#          password: ${{ secrets.JIRA_API_TOKEN }}
#          site: ${{ secrets.JIRA_BASE_URL }}
#
#      - name: Transition Jira Issue to 'Done'
#        # This step only runs if a PR was closed/merged AND a Jira key was found
#        if: github.event.action == 'closed' && github.event.pull_request.merged == true && steps.get-jira-key.outputs.JIRA_KEY != ''
#        uses: atlassian/gajira-transition@v3
#        with:
#          issue: ${{ steps.get-jira-key.outputs.JIRA_KEY }}
#          transition: "Done"
#          login: ${{ secrets.JIRA_USER_EMAIL }}
#          password: ${{ secrets.JIRA_API_TOKEN }}
#          site: ${{ secrets.JIRA_BASE_URL }}
